#Print the content of a linked list in reverse order.

class Node: 

    def __init__(self): 

        self.data=  0

        self.next=None

     

def printReverse( head_ref, n): 

   

    j = 0

    current = head_ref 

    while (current != None):  

        i = 0

          


        while ( i < 2 * (n - j) ): 

            print(end=" ") 

            i = i + 1

    

        print( current.data, end = "\r") 

    

        current = current.next

        j = j + 1

        

def push( head_ref, new_data): 

   

    new_node = Node()  

    

    new_node.data = new_data 

    new_node.next = (head_ref) 

    (head_ref) = new_node 

    return head_ref; 

    

def printList( head): 

   


    i = 0

    temp = head 

    while (temp != None):  

        print( temp.data,end = " ") 

        temp = temp.next

        i = i + 1

       

    return i 

    

head = None

  

head = push(head, 1) 

head = push(head, 2) 

head = push(head, 3) 

head = push(head, 4) 

head = push(head, 5) 

head = push(head, 6) 

    

print("Given linked list:") 

 

n = printList(head) 

    

print("\nReversed Linked list:") 
printReverse(head, n) 

print() 

Output:
Given linked list:
6 5 4 3 2 1
Reversed Linked List:
1 2 3 4 5 6
